version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ai-studio-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ai_studio
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai-studio-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-studio-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/ai_studio?authSource=admin
      - SECRET_KEY=your-super-secret-jwt-key-for-development
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STABILITY_API_KEY=${STABILITY_API_KEY}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      - MAX_IMAGE_SIZE=1024
      - DEFAULT_STEPS=20
      - DEFAULT_GUIDANCE_SCALE=7.5
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=True
      - FRONTEND_URL=http://localhost:3000
      - MAX_FILE_SIZE=10485760
    volumes:
      - ./backend/generated_images:/app/generated_images
    depends_on:
      - mongodb
    networks:
      - ai-studio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (for production-like testing)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-studio-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - ai-studio-network

  # Redis for caching (optional)
  redis:
    image: redis:7.2-alpine
    container_name: ai-studio-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-studio-network
    command: redis-server --appendonly yes

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  ai-studio-network:
    driver: bridge